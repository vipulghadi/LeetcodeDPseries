 bool solve(int ind1,int ind2,int k,string &s1, string &s2, string &s3,vector<vector<vector<int>>>&dp)
    {   
        if(k==s3.size())return true;
        if(dp[ind1][ind2][k]!=-1)return dp[ind1][ind2][k];
        bool left=false,right=false;
        if( ind1<s1.size() && s1[ind1]==s3[k])
        left=solve(ind1+1,ind2,k+1,s1,s2,s3,dp);
        if(ind2<s2.size() && s2[ind2]==s3[k])
        right=solve(ind1,ind2+1,k+1,s1,s2,s3,dp);
        return dp[ind1][ind2][k]=left||right;
    }
    bool isInterleave(string s1, string s2, string s3) 
    { 
        if(s3.size()>(s1.size()+s2.size()))return false;
        vector<vector<vector<int>>>dp(s1.size()+1,vector<vector<int>>(s2.size()+1,vector<int>(s3.size()+1,-1)));
        return solve(0,0,0,s1,s2,s3,dp);
    }
