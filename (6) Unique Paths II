--------------------------------using extra space 0(m*n)--------------------------------------------------------------------------------------
int n=grid.size();
       int m=grid[0].size();
       vector<vector<int>>dp(n,vector<int>(m,0));
       //first row
       int flag=0;
       for(int i=0;i<m;i++){  
         if(flag==1)dp[0][i]=0;
         else  if(grid[0][i]==1){
              dp[0][i]=0;
              flag=1;
          }
          else dp[0][i]=1;
       }
        flag=0;
       for(int i=0;i<n;i++){  
         if(flag==1)dp[i][0]=0;
         else  if(grid[i][0]==1){
              dp[i][0]=0;
              flag=1;
          }
          else dp[i][0]=1;
       }
       for(int i=1;i<n;i++)
       {
           for(int j=1;j<m;j++)
           {
               if(grid[i][j]==1)dp[i][j]=0;
               else dp[i][j]=dp[i][j-1]+dp[i-1][j];
           }
       }

    return dp[n-1][m-1];


----------------------------------------------using 0(m) extra space-------------------------------------------------------

    int n=grid.size();
       int m=grid[0].size();
       vector<int>dp(m,0);
       //first row
       int flag=0;
       for(int i=0;i<m;i++){  
         if(flag==1)dp[i]=0;
         else  if(grid[0][i]==1){
              dp[i]=0;
              flag=1;
          }
          else dp[i]=1;
       } 
      for(int i=1;i<n;i++)
      {
          vector<int>temp(m,0);
          for(int j=0;j<m;j++)
          {
                if(grid[i][j]==1)temp[j]=0;
                else
                        {
                            if(j==0)temp[j]=dp[j];
                            else temp[j]=temp[j-1]+dp[j];    
                        }
          }
          dp=temp;
      }

    return dp[m-1];

---------------------------------------------------------0(1)extra space-------------------------------------------------------

       int n = grid.size() , m = grid[0].size();
       if(grid[n-1][m-1]==1)return 0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
              if(grid[i][j]==1)grid[i][j]=-1;
              else if(i==0 && j==0)grid[i][j]=1;
              else{
                  int up=0,left=0;
                  if(i>0)
                  {
                      if(grid[i-1][j]==-1)up=0;
                      else up=grid[i-1][j];
                  }
                  if(j>0)
                  {
                     if(grid[i][j-1]==-1)left=0;
                      else left=grid[i][j-1]; 
                  }
                  grid[i][j]=up+left;
              }  
            }
        }
      return grid[n-1][m-1];
----------------------------------------------------------------------------------------------------------------------------

