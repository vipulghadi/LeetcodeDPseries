int solve(int n, vector<int>&dp)
    {
        if(n==1)return 1;
        if(n==0)return 0;
        if(dp[n]!=-1)return dp[n];
        if(n%2==0) dp[n]=solve(n/2,dp);
        if(n%2!=0) dp[n]=1+solve(n/2,dp);
        return dp[n];

    }
    vector<int> countBits(int n) {
        vector<int>dp(n+1,-1);
         vector<int>ans(n+1,-1);
        for(int i=0;i<=n;i++) ans[i]=solve(i,dp);
        return ans;
    }
-----------------------------------------dp-----------------------------------------------------
 vector<int>ans(n+1,-1);
         ans[0]=0;
         for(int i=1;i<=n;i++){
             if(i%2==0)ans[i]=ans[i/2];
             else ans[i]=1+ans[i/2];
         }
        return ans;
-------------------------------------------------------------------------------
int lp2(int n)
    {
        int x=0;
        while((1<<x)<=n)x++;
        return x-1;
    }
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int countSetBits(int n)
    {   if(n==0)return 0;
        int x=lp2(n);
        int y=x*(1<<(x-1));
        int z=n-(1<<x);
        return y+z+1+countSetBits(z);
    }
-----------------------------------------------------------------------------------------
